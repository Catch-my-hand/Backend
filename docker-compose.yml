version: '3'

services:
  spring-boot:
    container_name: backendAPI
    image: backend 
    restart: always 
    command: ./gradlew bootJar
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080 
      - 5005:5005


  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'


  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    restart: always
    deploy:
      mode: global
  
  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: prometheus
    ports:
      - "9090:9090"
    links: 
      - alertmanager:alertmanager
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=./prometheus/console_libraries'
      - '--web.console.templates=./prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    restart: always
    user: "root"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "8082:3000"
    volumes:
      - grafana_volume:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/


volumes:
  grafana_volume: null